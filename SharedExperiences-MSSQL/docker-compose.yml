version: '3.8'

services:
  api:
    build:
      context: ..
      dockerfile: SharedExperiences-MSSQL/Dockerfile
    container_name: shared-experiences-api
    ports:
      - "8080:80"
      - "8443:443"
    depends_on:
      - sqlserver
      - mongodb
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Data Source=sqlserver;Database=SharedExperincesDB;User Id=sa;Password=Zerefez7253!;TrustServerCertificate=True
      - ConnectionStrings__MongoDB=mongodb://mongodb:27017
      - Serilog__WriteTo__2__Args__databaseUrl=mongodb://mongodb:27017/SharedExperiencesLogs
      - JWT__ValidIssuer=http://localhost:8080
      - JWT__ValidAudience=http://localhost:8080
    networks:
      - shared-experiences-network
    volumes:
      - ./logs:/app/logs
    
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: shared-experiences-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Zerefez7253!
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqlserver-data:/var/opt/mssql
    networks:
      - shared-experiences-network
    healthcheck:
      test: ["CMD", "/opt/mssql-tools18/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "Zerefez7253!", "-Q", "SELECT 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    
  mongodb:
    image: mongo:latest
    container_name: shared-experiences-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    networks:
      - shared-experiences-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  shared-experiences-network:
    driver: bridge

volumes:
  sqlserver-data:
  mongodb-data: 